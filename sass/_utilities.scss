/* ==========================================================================
   Helper classes - Some from HTML5BP v4.1.0 and some custom.
   ========================================================================== */

// Image replacement
.ir { background-color: transparent; border: 0; overflow: hidden; }
.ir:before { content: ""; display: block; width: 0; height: 150%; }

// Hide from both screenreaders and browsers: h5bp.com/u
.hidden { display: none !important; visibility: hidden; }

// Hide only visually, but have it available for screenreaders: h5bp.com/v
.visuallyhidden { 
	border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; 
	// Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p
	&.focusable:active, &.focusable:focus {
		clip: auto; height: auto; margin: 0; overflow: visible; position: static; width: auto;
	}
}

// Hide visually and from screenreaders, but maintain layout
.invisible { visibility: hidden; }

// Reset margin and padding
.reset { padding:0; margin:0;}

/* ==========================================================================
   Custom Mixins
   ========================================================================== */

// Retina image backgrounds: http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
// Also see: http://paulstamatiou.com/responsive-retina-blog-development-part-2 & https://github.com/adamdbradley/foresight.js for more complex implementations. This is sort of the most basic way of doing it.
@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
		(-o-min-device-pixel-ratio: 2.6/2),
		(-webkit-min-device-pixel-ratio: 1.3),
		(min-device-pixel-ratio: 1.3),
		(min-resolution: 1.3dppx) {
		/* on retina, use image that's scaled by 2 */
		background-image: url($image);
		background-size: $width $height;
	}
}